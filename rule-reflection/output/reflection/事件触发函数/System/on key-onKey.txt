##功能##
该函数用于在按下键盘指定键时触发事件，按住不松手会持续触发。支持同时定义多个按键事件，适用于需要键盘交互的场景，如测试自动化或用户输入处理。

##vba规范##
函数定义：`@onKey('K') def onKeyEvent():`  
参数：单个字符按键（'a-z'或'A-Z'）  
返回值：无  
内置函数：无  
特殊要求：函数名称必须唯一，按键必须是字母字符。

##capl规范##
CAPL中使用`on key`事件处理键盘输入。  
示例1：  
```capl
on key 'k' {
  write("按键触发事件已触发！");
}
```  
示例2：  
```capl
on key 'a' {
  setTimer(1, 1000);
}
```  
参数：单个字符按键（'a-z'或'A-Z'）  
返回值：无  

##capl名##
on key

##转换须知##
1. CAPL使用`on key`语法直接定义事件，而VBA使用装饰器`@onKey`  
2. CAPL中按键事件处理直接写在花括号内，VBA需要单独的函数定义  
3. CAPL的`write`对应VBA的`writeInfo`  
4. 两者都支持多个按键事件，但CAPL不需要函数名唯一性检查  

##转换示例##
1. CAPL原始代码：  
```capl
on key 'k' {
  write("按键触发事件已触发！");
}
```  
2. 转换后的VBA代码：  
```vba
@onKey('K')
def onKeyEventK():
    writeInfo('按键触发事件已触发！')
```  
3. 关键转换说明：  
- CAPL的`on key`转换为VBA的`@onKey`装饰器  
- CAPL的代码块转换为VBA的函数定义  
- 输出函数从`write`改为`writeInfo`  
- 需要为VBA事件指定唯一函数名（如添加按键后缀）