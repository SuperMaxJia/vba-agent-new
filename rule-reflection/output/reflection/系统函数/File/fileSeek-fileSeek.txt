##功能##
fileSeek函数用于设置文件的当前位置，移动文件读取指针到指定位置。常用于随机访问文件内容，跳过特定字节或定位到文件特定位置进行读写操作。典型应用场景包括日志分析、二进制文件处理等需要精确定位文件位置的场景。

##vba规范##
函数定义：fileSeek(file, offset, whence=0)
参数：
- file: 文件对象（必须）
- offset: 整数，表示要移动的字节数（必须）
- whence: 整数，可选参数，默认为0。0表示从文件开始计算，1表示从当前位置计算，2表示从文件末尾计算
返回值：
- 成功时返回新的文件位置（整数）
- 失败时返回-1（整数）

##capl规范##
函数定义：fileSeek(fileHandle, position)
参数：
- fileHandle: 文件句柄（必须）
- position: 整数，表示要移动到的绝对位置（必须）
返回值：
- 成功时返回1（byte）
- 失败时返回0（byte）

示例1：
// 定位到文件第100字节
fileHandle = openFile("test.txt", 0);
fileSeek(fileHandle, 100);
closeFile(fileHandle);

示例2：
// 错误处理示例
fileHandle = openFile("nonexist.txt", 0);
if(fileSeek(fileHandle, 50) == 0) {
  write("Seek failed!");
}

##capl名##
fileSeek

##转换须知##
1. 参数差异：CAPL只有2个参数（文件句柄+绝对位置），而VBA有3个参数（文件对象+偏移量+基准位置）
2. 返回值差异：CAPL返回byte类型成功标志(1/0)，VBA返回整数类型位置/-1
3. 行为差异：CAPL总是绝对定位，VBA支持相对定位
4. 处理建议：在VBA中实现相对定位需要额外计算绝对位置

##转换示例##
1. CAPL原始代码：
fileHandle = openFile("data.bin", 0);
fileSeek(fileHandle, 1024);  // 绝对定位到1024字节
data = readFile(fileHandle, 10);

2. 转换后VBA代码：
Set file = openFile("data.bin", "rb")
fileSeek file, 1024, 0  ' 从文件开始绝对定位
data = readFile(file, 10)

3. 关键说明：
- 将CAPL的绝对位置转换为VBA的偏移量+基准位置组合
- VBA需要显式指定whence=0来实现绝对定位
- 返回值处理方式不同（CAPL检查0/1，VBA检查-1）