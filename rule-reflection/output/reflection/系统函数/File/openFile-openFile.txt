##功能##
该函数用于打开一个文件并返回文件对象，支持多种打开模式（只读、读写、追加等）和编码方式。主要用于文件操作场景，如读取配置文件、写入日志等。

##vba规范##
函数名：openFile
参数：
- filePath: String类型，文件路径
- mode: String类型，文件打开模式（'r','r+','w','w+','a','a+'）
- encoding: String类型，文件编码方式
返回值：file对象

##capl规范##
CAPL中没有直接对应的文件打开函数，但可以通过文件系统API实现类似功能：
1. 使用fileOpen函数打开文件
2. 使用fileGetString/filePutString进行读写
3. 使用fileClose关闭文件

示例1：
```capl
long fileHandle;
fileHandle = openFile("C:\\demo.txt", "r");
if(fileHandle >= 0) {
    char buffer[100];
    fileGetString(buffer, elcount(buffer), fileHandle);
    closeFile(fileHandle);
}
```

示例2：
```capl
long fileHandle;
fileHandle = openFile("C:\\log.txt", "a");
if(fileHandle >= 0) {
    filePutString("New log entry", fileHandle);
    closeFile(fileHandle);
}
```

##capl名##
openFile

##转换须知##
1. CAPL使用数值文件句柄而非文件对象
2. CAPL不直接支持编码参数
3. CAPL需要手动检查文件打开是否成功（返回值>=0）
4. CAPL必须显式调用closeFile关闭文件

##转换示例##
1. CAPL原始代码：
```capl
long handle;
handle = openFile("C:\\data.txt", "r");
if(handle >= 0) {
    char content[200];
    fileGetString(content, elcount(content), handle);
    closeFile(handle);
}
```

2. 转换后的VBA代码：
```vba
Dim file As Object
Set file = openFile(r"C:\data.txt", "r", "utf-8")
If Not file Is Nothing Then
    Dim content As String
    content = file.ReadAll
    closeFile file
End If
```

3. 关键转换说明：
- CAPL的数值句柄转换为VBA文件对象
- 显式添加了编码参数
- 错误检查方式从数值判断改为对象判断
- 简化了文件读取操作