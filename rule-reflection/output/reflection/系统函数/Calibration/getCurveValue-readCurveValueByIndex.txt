##功能##
读取Curve变量指定区域内指定索引处的测量值。用于从标定节点中获取特定曲线变量的物理测量值，常用于标定、测量和诊断过程中。

##vba规范##
函数定义：readCurveValueByIndex(calNode, variable, index, region)
参数：
- calNode: CalNode类型，标定节点对象
- variable: str或CalVariable类型，变量名称或变量对象
- index: int类型，列索引（x方向索引）
- region: int类型，区域类型（0：值区域，1：轴点区域）
返回值：ResultInfo类型，包含errorInfo和backPhyValue

##capl规范##
函数定义：getCurveValue(calNode, variable, index, region)
参数：
- calNode: CalNode类型，标定节点对象
- variable: char[]或CalVariable类型，变量名称或变量对象
- index: long类型，列索引（x方向索引）
- region: long类型，区域类型（0：值区域，1：轴点区域）
返回值：ResultInfo类型，包含error和value

示例1：
```capl
CalNode node = CAN1::Calibrations::calNode1;
ResultInfo result = getCurveValue(node, "ResistTemp_Y", 0, 0);
write("Value: %f", result.value);
```

示例2：
```capl
CalVariable var = CAN1::Calibrations::calNode1::characteristics::ResistTemp_Y;
ResultInfo result = getCurveValue(CAN1::Calibrations::calNode1, var, 1, 1);
if(result.error == 0) {
  write("Axis value: %f", result.value);
}
```

##capl名##
getCurveValue

##转换须知##
1. 参数类型差异：VBA使用int而CAPL使用long类型
2. 返回值成员名差异：VBA使用backPhyValue而CAPL使用value
3. 错误处理差异：VBA使用errorInfo而CAPL使用error
4. 字符串处理：VBA使用单引号而CAPL使用双引号

##转换示例##
CAPL原始代码：
```capl
ResultInfo res = getCurveValue(calNode, "EngineTemp", 2, 0);
if(res.error == 0) {
  write("Temperature: %f", res.value);
}
```

转换后的VBA代码：
```vba
Dim res As ResultInfo
res = readCurveValueByIndex(calNode, "EngineTemp", 2, 0)
If res.errorInfo = "" Then
    writeInfo res.backPhyValue
End If
```

关键转换步骤：
1. 函数名从getCurveValue改为readCurveValueByIndex
2. 错误检查从res.error改为res.errorInfo
3. 输出值从res.value改为res.backPhyValue
4. 输出函数从write改为writeInfo