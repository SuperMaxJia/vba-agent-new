1. 函数名  
chkCreate_NodeMsgsRelCycleTimeViolation  

2. 函数描述  
用于检测数据库中定义节点发送的周期性报文的周期是否在指定的范围内。  

3. 函数体  
所有检测函数都有对应的chkStart_xxxx()和chkCreate_xxxx()。  
chkCreate_xxxx()只创建检测对象但不开始检测，需要调用chkControl_Start；  
chkStart_xxxx()创建检测对象同时直接开始检测。  

4. 返回值  
| 名称 | 类型 | 描述 |  
|------|------|------|  
| res  | int  | 代表创建的对象，-1代表创建失败 |  

5. 参数  
| 名称               | 类型     | 描述                     |  
|--------------------|----------|--------------------------|  
| node               | ECUNode  | 在数据库中定义的节点     |  
| aMinRelCycleTime   | Number   | 0 < x < 1                |  
| aMaxRelCycleTime   | Number   | 1 < x < ∞                |  

6. 内置函数  
| 函数名称                     | 函数描述                                     |  
|------------------------------|----------------------------------------------|  
| chkControl_Start             | 启动检测对象                                 |  
| chkStart_NodeMsgsRelCycleTimeViolation | 创建检测对象并直接开始检测周期时间违规情况 |  

7. 示例  
功能：检测数据库中定义节点发送的周期性报文的周期是否在指定的范围内。  
示例代码：  
```vba  
# 假如该报文在数据库中规定的周期为100ms，则以下函数检测该报文的实际周期是否在100*0.9到100*1.1的范围内。  
checkId = chkStart_NodeMsgsRelOccurrenceViolation(CAN1.NodeToObserve, 0.9, 1.1);  
# 调用该方法后，统计信息将加入到自动化测试报告  
testAddCondition(checkId);  
# 共统计1000ms  
testWaitForTimeout(1000);  
# 结束统计  
testRemoveCondition(checkId);  
```  

8. 其他相关说明  
- 该函数通常用于自动化测试场景，结合其他测试函数（如testAddCondition、testWaitForTimeout等）进行周期时间违规检测。  
- 检测结果会记录到自动化测试报告中。  
- 适用于CAN、LIN等总线通信的周期性报文检测。