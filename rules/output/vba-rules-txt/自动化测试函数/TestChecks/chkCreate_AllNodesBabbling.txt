1. 函数名  
chkCreate_AllNodesBabbling  

2. 函数描述  
用于检测一个网段上的所有节点是否休眠。给定一个容忍时间（`aMaxQuietTime`），在容忍时间内允许报文发送；超过容忍时间后，若收到报文则触发一次事件。  

3. 函数体  
- 所有检测函数均有对应的`chkStart_xxxx()`和`chkCreate_xxxx()`：  
  - `chkCreate_xxxx()`仅创建检测对象但不开始检测，需调用`chkControl_Start`启动；  
  - `chkStart_xxxx()`创建检测对象并立即开始检测。  
- 函数调用格式：  
  ```vba
  chkStart_AllNodesBabbling(network, aMaxQuietTime)  
  chkCreate_AllNodesBabbling(network, aMaxQuietTime)  
  ```  

4. 返回值  
| 名称 | 类型 | 描述                |  
|------|------|-------------------|  
| res  | int  | 代表创建的对象，-1表示失败 |  

5. 参数  
| 名称           | 类型    | 描述                     |  
|----------------|---------|------------------------|  
| network        | Network | 网段对象                 |  
| aMaxQuietTime  | int     | 最大容忍时间（单位：毫秒） |  

6. 内置函数  
- `chkControl_Start`：启动检测对象。  
- `testAddCondition`：将统计信息加入自动化测试报告。  
- `testWaitForTimeout`：设置等待超时时间。  
- `testRemoveCondition`：结束统计。  

7. 示例  
**功能**：检测CAN1网段所有节点在300ms后是否仍有报文发送。  
**代码**：  
```vba  
checkId = chkStart_AllNodesBabbling(CAN1, 300)  
testAddCondition(checkId)  ' 将统计信息加入报告  
testWaitForTimeout(1000)   ' 统计持续1000ms，300ms后触发事件  
testRemoveCondition(checkId) ' 结束统计  
```  
**注释**：  
- `300`为容忍时间，超时后若收到报文则触发事件；  
- `1000`为总测试时长。  

8. 其他说明  
- 需配合自动化测试函数（如`testAddCondition`）使用以生成报告。  
- 函数属于自动化测试模块，用于总线网络节点状态监控。