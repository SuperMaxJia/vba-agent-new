以下是提取的VBA函数`chkConfig_SetCallback`的详细信息：

1. 函数名  
   `chkConfig_SetCallback`  

2. 函数描述  
   用于设置检测事件对象的回调函数，当检测函数被触发时，会自动调用该函数。  

3. 函数体  
   ```vba
   result = chkConfig_SetCallback(object, func)
   ```  

4. 返回值  
   | 名称 | 类型 | 描述          |  
   |------|------|-------------|  
   | res  | int  | 0 成功，-1 失败 |  

5. 参数  
   | 名称    | 类型   | 描述         |  
   |---------|--------|------------|  
   | object  | object | 检测对象       |  
   | func    | 函数指针 | 回调函数       |  

6. 内置函数  
   无  

7. 示例  
   **示例功能**：设置检测事件对象的回调函数，当总线报文超过2条时触发回调。  
   **示例代码**：  
   ```vba
   ' 定义回调函数
   Function func()
       MsgBox "报文出现次数超过上限！"
   End Function

   ' 检测指定的报文出现次数是否超过2次
   checkId = chkStart_MsgOccurrenceCount(CAN, CAN.MSG, 2)

   ' 调用该方法后，统计信息将加入到自动化测试报告
   testAddCondition(checkId)

   ' 总线报文超过2条时，条件被触发，自动调用func函数
   chkConfig_SetCallback(checkId, func)

   ' 共统计1000ms
   testWaitForTimeout(1000)

   ' 结束统计
   testRemoveCondition(checkId)
   ```  
   **代码注释**：  
   - `func` 是回调函数，当检测条件触发时执行。  
   - `chkStart_MsgOccurrenceCount` 用于检测报文出现次数是否超过指定值。  
   - `testAddCondition` 将检测结果加入测试报告。  
   - `testWaitForTimeout` 设置检测时长。  
   - `testRemoveCondition` 结束检测。  

8. 其他相关说明  
   - 该函数通常用于自动化测试场景，结合其他检测函数（如 `chkStart_MsgOccurrenceCount`）使用。  
   - 回调函数需提前定义，且无参数传递。